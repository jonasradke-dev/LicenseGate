# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    
    - name: Publish API
      if: startsWith(github.ref, 'refs/tags/')
      run: dotnet publish LicenseGate.API/LicenseGate.API.csproj -c Release -o ./publish
    
    - name: Create ZIP archive
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cd publish
        zip -r ../licensegate-api-${{ github.ref_name }}.zip .
        cd ..
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: actions/create-release@v1
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./licensegate-api-${{ github.ref_name }}.zip
        asset_name: licensegate-api-${{ github.ref_name }}.zip
        asset_content_type: application/zip
